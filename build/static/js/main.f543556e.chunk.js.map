{"version":3,"sources":["TodoReducer.js","GetRequestActions.js","Todo.js","index.js"],"names":["initialState","todoList","isFetching","fetchTodos","dispatch","type","axios","get","then","response","json","data","console","log","todos","catch","Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clickResetButton","e","resetTodo","clickAddButton","addTodo","state","todo","tmp_todo","objectSpread","content","setState","onChangeInput","target","value","onDelClick","clicked_index","parentNode","id","del_id","todoState","removeTodo","onEditClick","edit_todo","editing_todo","onEditSaveClick","tmp_edit_todo","updateTodo","onEditCancelClick","onChangeEditInput","is_completed","isEditing","_this2","react_default","a","createElement","onChange","onClick","map","index","href","key","React","Component","connect","uuid","update_todo","store","createStore","combineReducers","arguments","length","undefined","action","assign","concat","toConsumableArray","new_todoList","el","filter","applyMiddleware","thunkMiddleware","rootElement","document","getElementById","ReactDOM","render","className","es","src_Todo"],"mappings":"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","file":"static/js/main.f543556e.chunk.js","sourcesContent":["//Reducer\n\nconst initialState = {\n  todoList: [],\n  isFetching: false,\n};\n\nexport const TodoReducer = (state = initialState, action) => {//state ={ todoList: [] }\n  switch (action.type) {\n\n    case 'FETCH_TODOS':\n    return Object.assign({}, state, {\n      isFetching: true\n    });\n    case 'FETCH_TODOS_SUCCESS':\n    return Object.assign({}, state, {\n      isFetching: false,\n      todos: action.todos\n    });\n\n    case \"ADD_TODO\": {\n      // Newly added ToDo\n      // const new_todo = action.todo;\n      return {\n        todoList: [...state.todoList, action.todo]\n      };\n    }\n    case \"UPDATE_TODO\": {\n      let new_todoList = state.todoList.map((el, index) => {\n        // console.log(\"action.update_todo\")\n        // console.log(action.update_todo)\n        return el.id === action.update_todo.id ? action.update_todo : el;\n      });\n      console.log(\"new_todoList\");\n      console.log(new_todoList);\n      return {\n        todoList: new_todoList\n      };\n    }\n    case \"RESET_TODO\": {\n      return {\n        todoList: []\n      };\n    }\n    case \"REMOVE_TODO\": {\n      console.log(state.todoList);\n      let new_todoList = state.todoList.filter(el => el.id !== action.del_id);\n      console.log(\"new_todoList\");\n      console.log(new_todoList);\n\n      return {\n        todoList: new_todoList\n      };\n    }\n    default:\n      return state;\n  }\n};\n","// export const FETCH_TODOS = 'FETCH_TODOS'\n// export const FETCH_TODOS_SUCCESS = 'FETCH_TODOS_SUCCESS'\nimport axios from 'axios'\n\nfunction requestTodos() {\n  return {\n    type: 'FETCH_TODOS'\n  }\n}\n\nfunction receiveTodos(json) {\n  console.log(\"receiveTodos\")\n  console.log(json)\n  return {\n    type: 'FETCH_TODOS_SUCCESS',\n    todos: json\n  }\n}\n\n// メッセージ取得\n\nexport function fetchTodos() {\n  return dispatch => {\n    \n    dispatch(requestTodos())\n    \n    return axios.get('http://localhost:3001/todos').then((response) => {\n      \n        dispatch(receiveTodos(response.data))\n      }).catch((response) => {\n        console.log(response)\n      })\n  }\n}","/* eslint-disable */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport uuid from \"uuid\";\nimport { fetchTodos } from './GetRequestActions';\n\nconst addTodo = todo => {\n  let tmp_todo = { ...todo };\n  tmp_todo.id = uuid();\n  return {\n    type: \"ADD_TODO\",\n    todo: tmp_todo\n  };\n};\n\nconst resetTodo = () => {\n  return {\n    type: \"RESET_TODO\"\n  };\n};\n\nconst removeTodo = del_id => {\n  return {\n    type: \"REMOVE_TODO\",\n    del_id: del_id\n  };\n};\n\nconst updateTodo = update_todo => {\n  return {\n    type: \"UPDATE_TODO\",\n    update_todo\n  };\n};\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.onChangeInput = this.onChangeInput.bind(this);\n    this.state = {\n      todo: {\n        content: \"\",\n        is_completed: \"\",\n        id: \"\",\n        isEditing: false\n      },\n      editing_todo: {}\n\n      // dummyList: [\"aaa\", \"bbb\"]\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchTodos()\n    // console.log(\"res\")\n    // console.log(this.props)\n  }\n\n  clickResetButton = e => {\n    // alert(\"hey\");\n    this.props.resetTodo();\n  };\n  clickAddButton = e => {\n    // alert(\"hey\");\n    this.props.addTodo(this.state.todo);\n\n    //clear the Todo input field\n    let tmp_todo = { ...this.state.todo };\n    tmp_todo.content = \"\";\n    this.setState({ todo: tmp_todo });\n  };\n  onChangeInput = e => {\n    let tmp_todo = { ...this.state.todo };\n    tmp_todo.content = e.target.value;\n    // console.log(\"----\");\n    // console.log(tmp_todo);\n    this.setState({ todo: tmp_todo });\n    // this.setState({ todo: e.target.value });\n  };\n  onDelClick = e => {\n    let clicked_index = e.target.parentNode.id;\n    let del_id = this.props.todoState.todoList[clicked_index].id;\n    // alert(del_id);\n    this.props.removeTodo(del_id);\n  };\n\n  onEditClick = e => {\n    let clicked_index = e.target.parentNode.id;\n    let edit_todo = this.props.todoState.todoList[clicked_index];\n\n    //alert(edit_todo.content);\n    this.setState({ editing_todo: edit_todo });\n    // edit_todo.isEditing = true;\n    // this.setState({ todo: edit_todo });\n  };\n\n  onEditSaveClick = e => {\n    //dispatch update\n    let tmp_edit_todo = this.state.editing_todo;\n\n    this.props.updateTodo(tmp_edit_todo);\n    this.setState({ editing_todo: {} });\n  };\n\n  onEditCancelClick = e => {\n    this.setState({ editing_todo: {} });\n  };\n  onChangeEditInput = e => {\n    let tmp_todo = { ...this.state.editing_todo };\n    tmp_todo.content = e.target.value;\n    // console.log(\"----\");\n    // console.log(tmp_todo);\n    this.setState({ editing_todo: tmp_todo });\n  };\n  render() {\n    console.log(this.props);\n    console.log(this.state);\n\n    return (\n      <div>\n        New Todo\n        <div id=\"form\">\n          <input\n            type=\"text\"\n            value={this.state.todo.content}\n            onChange={this.onChangeInput}\n          />\n          <button onClick={this.clickAddButton}>Add</button>\n          <button onClick={this.clickResetButton}>Reset</button>\n        </div>\n        <div id=\"todo-list\">\n          <ul>\n            {this.props.todoState.todoList.map((todo, index) => {\n              if (todo.id === this.state.editing_todo.id) {\n                return (\n                  <li>\n                    <div>\n                      <input\n                        type=\"text\"\n                        value={this.state.editing_todo.content}\n                        onChange={this.onChangeEditInput}\n                      />\n                      <a\n                        href=\"javascript:void(0);\"\n                        onClick={this.onEditSaveClick}\n                      >\n                        Save\n                      </a>\n                      &nbsp;|&nbsp;\n                      <a\n                        href=\"javascript:void(0);\"\n                        onClick={this.onEditCancelClick}\n                      >\n                        Cancel\n                      </a>\n                    </div>\n                  </li>\n                );\n              } else {\n                return (\n                  <li key={index} id={index}>\n                    {todo.content} &emsp;&emsp;&emsp;&emsp;\n                    <a href=\"javascript:void(0);\" onClick={this.onEditClick}>\n                      edit\n                    </a>\n                    &nbsp;|&nbsp;\n                    <a href=\"javascript:void(0);\" onClick={this.onDelClick}>\n                      del\n                    </a>\n                  </li>\n                );\n              }\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoState: state.todo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodo: todo => dispatch(addTodo(todo)),\n    resetTodo: () => dispatch(resetTodo()),\n    removeTodo: del_id => dispatch(removeTodo(del_id)),\n    updateTodo: update_todo => dispatch(updateTodo(update_todo)),\n    fetchTodos: fetchTodos\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Todo);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n// import App from './App';\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport { TodoReducer } from \"./TodoReducer\";\nimport Todo from \"./Todo\";\n\nconst store = createStore(\n  combineReducers({\n    todo: TodoReducer    \n  }),\n  applyMiddleware(thunkMiddleware)\n);\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Simple Todo App</h1>\n      <h2>What are you going to do?</h2>\n      <Provider store={store}>\n        <Todo />\n      </Provider>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}